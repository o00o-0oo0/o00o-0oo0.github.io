import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.BmdFiWrL.js";const F=JSON.parse('{"title":"启用 GPU 监控","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/q9.md","filePath":"guide/q9.md","lastUpdated":1732521523000}'),n={name:"guide/q9.md"},t=e(`<h1 id="启用-gpu-监控" tabindex="-1">启用 GPU 监控 <a class="header-anchor" href="#启用-gpu-监控" aria-label="Permalink to &quot;启用 GPU 监控&quot;">​</a></h1><p>GPU 监控是哪吒监控 v0.17.x 引入的新功能，使用前请检查您的 Dashboard 版本是否为 v0.17.2+ / Agent 版本是否为 v0.17.0+。</p><h2 id="启用" tabindex="-1">启用 <a class="header-anchor" href="#启用" aria-label="Permalink to &quot;启用&quot;">​</a></h2><h3 id="通过启动参数" tabindex="-1">通过启动参数 <a class="header-anchor" href="#通过启动参数" aria-label="Permalink to &quot;通过启动参数&quot;">​</a></h3><p>在 Agent 运行参数后添加 <code>--gpu</code> 即可。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/opt/nezha/agent/nezha-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com:5555</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gpu</span></span></code></pre></div><h3 id="通过配置文件" tabindex="-1">通过配置文件 <a class="header-anchor" href="#通过配置文件" aria-label="Permalink to &quot;通过配置文件&quot;">​</a></h3><p>执行以下命令修改 Agent 配置文件以启用 GPU 监控：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/opt/nezha/agent/nezha-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span></span></code></pre></div><p>在返回的互动菜单中选择启用 GPU 功能即可。</p><h2 id="打开-gpu-占用率监控支持" tabindex="-1">打开 GPU 占用率监控支持 <a class="header-anchor" href="#打开-gpu-占用率监控支持" aria-label="Permalink to &quot;打开 GPU 占用率监控支持&quot;">​</a></h2><p>GPU 型号与 GPU 使用率为两个不同的监控项目，使用了不同实现获取。</p><p>其中 Windows 和 macOS 支持无依赖获取 GPU 使用率，并支持多个品牌显卡；</p><p>Linux 平台则仅支持 NVIDIA / AMD 显卡，且需要安装额外依赖。</p><p>以下将介绍如何在 Linux 上为 NVIDIA / AMD 显卡启用 GPU 使用率监控。</p><h3 id="nvidia" tabindex="-1">NVIDIA <a class="header-anchor" href="#nvidia" aria-label="Permalink to &quot;NVIDIA&quot;">​</a></h3><p>NVIDIA 显卡获取 GPU 使用率需要用到 <code>nvidia-smi</code> 工具，一般为官方驱动自带。</p><p>如果您使用的是非官方驱动，例如 <code>nouveau</code>，那么将无法获取 GPU 使用率。</p><h3 id="amd" tabindex="-1">AMD <a class="header-anchor" href="#amd" aria-label="Permalink to &quot;AMD&quot;">​</a></h3><p>AMD 显卡获取 GPU 使用率需要安装 <code>amdgpu</code> 开源驱动和 <code>rocm-smi</code> 工具。</p><p>主流系统均已打包 <code>rocm-smi</code> ，以下是部分系统的安装命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Arch Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Sy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocm-smi-lib</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debian / Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocm-smi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fedora / RHEL 8+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocm-smi</span></span></code></pre></div><p>如果您的系统并没有相应包，那么则需要手动编译安装 <code>rocm_smi_lib</code>。</p><p>您的系统需要安装这些依赖：<code>git</code> <code>cmake</code> <code>gcc</code></p><p>首先 Clone <code>rocm_smi_lib</code> 的 git 仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/ROCm/rocm_smi_lib</span></span></code></pre></div><p>然后进行编译并安装即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocm_smi_lib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install library file and header; default location is /opt/rocm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div>`,28),p=[t];function l(h,d,k,c,o,r){return i(),a("div",null,p)}const u=s(n,[["render",l]]);export{F as __pageData,u as default};
